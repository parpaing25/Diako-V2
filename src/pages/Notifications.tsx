import Header from "@/components/Header";
import Sidebar from "@/components/Sidebar";
import RightSidebar from "@/components/RightSidebar";
import { useUser } from "@/contexts/UserContext";
import { db } from "@/firebase";
import {
  collection,
  query,
  where,
  orderBy,
  onSnapshot,
  type Timestamp,
} from "firebase/firestore";
import { useEffect, useState } from "react";

/**
 * Notifications page lists notifications for the current user. It
 * subscribes to the `notifications` collection in Firestore and
 * displays them in reverse chronological order. Each notification
 * contains a message and a timestamp. Additional fields can be
 * added to support deep links or different notification types.
 */
// Define the shape of a notification. Each notification has an ID
// generated by Firestore, a message string, and an optional Firestore
// timestamp. Additional fields can be added as needed. We avoid
// `any` to satisfy the ESLint `no-explicit-any` rule.
interface UserNotification {
  id: string;
  message: string;
  timestamp?: Timestamp;
}

const Notifications = () => {
  const { user } = useUser();
  const [notifications, setNotifications] = useState<UserNotification[]>([]);

  useEffect(() => {
    const ref = collection(db, "notifications");
    const q = query(ref, where("userId", "==", user.id), orderBy("timestamp", "desc"));
    const unsub = onSnapshot(q, (snapshot) => {
      setNotifications(
        snapshot.docs.map((doc) => {
          const data = doc.data() as {
            message: string;
            timestamp?: Timestamp;
          };
          return { id: doc.id, ...data } as UserNotification;
        })
      );
    });
    return () => unsub();
  }, [user.id]);

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <div className="flex">
        <Sidebar />
        <main className="flex-1 lg:ml-[var(--sidebar-width)] xl:mr-80 pt-[var(--header-height)]">
          <div className="p-6 space-y-4">
            <h2 className="text-xl font-semibold mb-4">Notifications</h2>
            {notifications.length === 0 ? (
              <p>Aucune notification pour l'instant.</p>
            ) : (
              <ul className="space-y-3">
                {notifications.map((not) => (
                  <li key={not.id} className="p-3 border rounded-lg hover:bg-muted cursor-pointer">
                    <p className="text-sm font-medium">{not.message}</p>
                    {not.timestamp && (
                      <p className="text-xs text-muted-foreground mt-1">
                        {new Date(not.timestamp.seconds * 1000).toLocaleString()}
                      </p>
                    )}
                  </li>
                ))}
              </ul>
            )}
          </div>
        </main>
        <RightSidebar />
      </div>
    </div>
  );
};

export default Notifications;